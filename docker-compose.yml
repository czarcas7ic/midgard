version: "3"

services:
  midgard:
    build:
      context: .
      dockerfile: Dockerfile
    image: midgard
    ports:
      - 8080:8080
    links:
      - pg
    depends_on:
      - pg
    volumes:
      - ./config/local.json:/config.json
      - blockstore:/blockstore

  pg:
    image: timescale/timescaledb:2.2.0-pg13
    shm_size: 512m
    command: postgres -c plan_cache_mode=force_custom_plan
    environment:
      - POSTGRES_DB=midgard
      - POSTGRES_USER=midgard
      - POSTGRES_PASSWORD=password
    ports:
      - 5432:5432
    volumes:
      - pg:/var/lib/postgresql/data

  pg2:
    image: timescale/timescaledb:2.2.0-pg13
    shm_size: 512m
    command: postgres -c plan_cache_mode=force_custom_plan
    environment:
      - POSTGRES_DB=midgard
      - POSTGRES_USER=midgard
      - POSTGRES_PASSWORD=password
    ports:
      - 6432:5432
    volumes:
      - pg2:/var/lib/postgresql/data

  pg3:
    image: timescale/timescaledb:2.2.0-pg13
    shm_size: 512m
    command: postgres -c plan_cache_mode=force_custom_plan
    environment:
      - POSTGRES_DB=midgard
      - POSTGRES_USER=midgard
      - POSTGRES_PASSWORD=password
    ports:
      - 7432:5432
    volumes:
      - pg3:/var/lib/postgresql/data

  pgtest:
    image: timescale/timescaledb:2.2.0-pg13
    command: postgres -c plan_cache_mode=force_custom_plan
    environment:
      - POSTGRES_DB=midgard
      - POSTGRES_USER=midgard
      - POSTGRES_PASSWORD=password
    ports:
      - 5433:5432
    volumes:
      - pgtest:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    network_mode: host
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./metrics/grafana/dashboards/:/var/lib/grafana/dashboards/
      - ./metrics/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/default.yaml
      - ./metrics/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/default.yaml
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 9091:3000

volumes:
  pg:
  pg2:
  pg3:
  pgtest:
  blockstore:
  prometheus:
